name: FE Deployment
run-name: FE Deployment by @${{ github.actor }}

on: 
    workflow_dispatch:

permissions:
    id-token: write  # This is required for requesting the JWT
    contents: read   # This is required for actions/checkout

env:
    PROJECT_NAME: "4337-demo FE"
    ASSUME_ROLE: "arn:aws:iam::304661646682:role/Github-action-for-MaioCo-4337demo-fe"
    AWS_REGION: "ap-northeast-1"
    BUILD_PATH: "./dist"

jobs:
    Set_env:
        runs-on: ubuntu-latest
        outputs:
            REF_NAME: ${{ steps.extract-ref-name.outputs.REF_NAME }}
        steps:
            - name: Extract reference name
              id: extract-ref-name
              run: |
                if [[ $GITHUB_REF == refs/tags/* ]]; then
                  echo "REF_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                else
                  echo "REF_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
                fi
              env:
                GITHUB_REF: ${{ github.ref }}
    build:
        needs: Set_env
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Git clone the repository
              uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node-version }}

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ env.ASSUME_ROLE}}
                role-session-name: ${{ env.DEPLOY_ENV }}
                aws-region: ${{ env.AWS_REGION }}
              env:
                DEPLOY_ENV: ${{ (needs.Set_env.outputs.REF_NAME == 'master' || startsWith(needs.Set_env.outputs.REF_NAME, 'v.')) && 'production' || 'staging' }}

            - name: Security Token Service (STS) get caller identity
              run: aws sts get-caller-identity

            - name: Yarn build
              run: |
                yarn
                yarn build
              env:
                DEPLOY_ENV: ${{ (needs.Set_env.outputs.REF_NAME == 'master' || startsWith(needs.Set_env.outputs.REF_NAME, 'v.')) && 'production' || 'staging' }}

            - name: Upload to S3 bucket
              run: aws s3 sync ./${{ env.BUILD_PATH }} s3://${{ secrets.AWS_S3_BUCKET }} --delete

            - name: Create invalidation for CloudFront distribution
              run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"
