import{ac as m}from"./index-d0092a53.js";import{t as k,g as v,b as E,s as P,H as _,h as O,F as x}from"./lazy-json-bd073f8f.js";const b=e=>{var t;return typeof ReadableStream=="function"&&(((t=e==null?void 0:e.constructor)==null?void 0:t.name)===ReadableStream.name||e instanceof ReadableStream)},I="The stream has already been transformed.",N=e=>{var n,s;if(!S(e)&&!b(e)){const i=((s=(n=e==null?void 0:e.__proto__)==null?void 0:n.constructor)==null?void 0:s.name)||e;throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${i}`)}let t=!1;const r=async()=>{if(t)throw new Error(I);return t=!0,await P(e)},o=i=>{if(typeof i.stream!="function")throw new Error(`Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.
If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body`);return i.stream()};return Object.assign(e,{transformToByteArray:r,transformToString:async i=>{const c=await r();if(i==="base64")return k(c);if(i==="hex")return v(c);if(i===void 0||i==="utf8"||i==="utf-8")return E(c);if(typeof TextDecoder=="function")return new TextDecoder(i).decode(c);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(t)throw new Error(I);if(t=!0,S(e))return o(e);if(b(e))return e;throw new Error(`Cannot transform payload to web stream, got ${e}`)}})},S=e=>typeof Blob=="function"&&e instanceof Blob;class g extends Error{constructor(t,r=!0){var s;let o,n=!0;typeof r=="boolean"?(o=void 0,n=r):r!=null&&typeof r=="object"&&(o=r.logger,n=r.tryNextLink??!0),super(t),this.name="ProviderError",this.tryNextLink=n,Object.setPrototypeOf(this,g.prototype),(s=o==null?void 0:o.debug)==null||s.call(o,`@smithy/property-provider ${n?"->":"(!)"} ${t}`)}static from(t,r=!0){return Object.assign(new this(t.message,r),t)}}class a extends g{constructor(t,r=!0){super(t,r),this.name="CredentialsProviderError",Object.setPrototypeOf(this,a.prototype)}}function T(e){return Promise.all(Object.keys(e).reduce((t,r)=>{const o=e[r];return typeof o=="string"?t.push([r,o]):t.push(o().then(n=>[r,n])),t},[])).then(t=>t.reduce((r,[o,n])=>(r[o]=n,r),{}))}function A(e){return async()=>{var c,d,l;(c=e.logger)==null||c.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const{GetCredentialsForIdentityCommand:t,CognitoIdentityClient:r}=await m(()=>import("./loadCognitoIdentity-6c02269f.js"),["assets/loadCognitoIdentity-6c02269f.js","assets/GetIdCommand-dd777a93.js","assets/index-6b40c100.js","assets/lazy-json-bd073f8f.js","assets/index-d0092a53.js","assets/index-d8cbc275.css","assets/noAuth-3a9ec9c8.js","assets/parseJsonBody-f21f123e.js"]),{Credentials:{AccessKeyId:o=K(e.logger),Expiration:n,SecretKey:s=j(e.logger),SessionToken:i}=D(e.logger)}=await(e.client??new r(Object.assign({},e.clientConfig??{},{region:((d=e.clientConfig)==null?void 0:d.region)??((l=e.parentClientConfig)==null?void 0:l.region)}))).send(new t({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await T(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:o,secretAccessKey:s,sessionToken:i,expiration:n}}}function K(e){throw new a("Response from Amazon Cognito contained no access key ID",{logger:e})}function D(e){throw new a("Response from Amazon Cognito contained no credentials",{logger:e})}function j(e){throw new a("Response from Amazon Cognito contained no secret key",{logger:e})}const h="IdentityIds";class H{constructor(t="aws:cognito-identity-ids"){this.dbName=t}getItem(t){return this.withObjectStore("readonly",r=>{const o=r.get(t);return new Promise(n=>{o.onerror=()=>n(null),o.onsuccess=()=>n(o.result?o.result.value:null)})}).catch(()=>null)}removeItem(t){return this.withObjectStore("readwrite",r=>{const o=r.delete(t);return new Promise((n,s)=>{o.onerror=()=>s(o.error),o.onsuccess=()=>n()})})}setItem(t,r){return this.withObjectStore("readwrite",o=>{const n=o.put({id:t,value:r});return new Promise((s,i)=>{n.onerror=()=>i(n.error),n.onsuccess=()=>s()})})}getDb(){const t=self.indexedDB.open(this.dbName,1);return new Promise((r,o)=>{t.onsuccess=()=>{r(t.result)},t.onerror=()=>{o(t.error)},t.onblocked=()=>{o(new Error("Unable to access DB"))},t.onupgradeneeded=()=>{const n=t.result;n.onerror=()=>{o(new Error("Failed to create object store"))},n.createObjectStore(h,{keyPath:"id"})}})}withObjectStore(t,r){return this.getDb().then(o=>{const n=o.transaction(h,t);return n.oncomplete=()=>o.close(),new Promise((s,i)=>{n.onerror=()=>i(n.error),s(r(n.objectStore(h)))}).catch(s=>{throw o.close(),s})})}}class M{constructor(t={}){this.store=t}getItem(t){return t in this.store?this.store[t]:null}removeItem(t){delete this.store[t]}setItem(t,r){this.store[t]=r}}const B=new M;function L(){return typeof self=="object"&&self.indexedDB?new H:typeof window=="object"&&window.localStorage?window.localStorage:B}function $({accountId:e,cache:t=L(),client:r,clientConfig:o,customRoleArn:n,identityPoolId:s,logins:i,userIdentifier:c=!i||Object.keys(i).length===0?"ANONYMOUS":void 0,logger:d,parentClientConfig:l}){d==null||d.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const u=c?`aws:cognito-identity-credentials:${s}:${c}`:void 0;let y=async()=>{const{GetIdCommand:w,CognitoIdentityClient:C}=await m(()=>import("./loadCognitoIdentity-6c02269f.js"),["assets/loadCognitoIdentity-6c02269f.js","assets/GetIdCommand-dd777a93.js","assets/index-6b40c100.js","assets/lazy-json-bd073f8f.js","assets/index-d0092a53.js","assets/index-d8cbc275.css","assets/noAuth-3a9ec9c8.js","assets/parseJsonBody-f21f123e.js"]),p=r??new C(Object.assign({},o??{},{region:(o==null?void 0:o.region)??(l==null?void 0:l.region)}));let f=u&&await t.getItem(u);if(!f){const{IdentityId:R=q(d)}=await p.send(new w({AccountId:e,IdentityPoolId:s,Logins:i?await T(i):void 0}));f=R,u&&Promise.resolve(t.setItem(u,f)).catch(()=>{})}return y=A({client:p,customRoleArn:n,logins:i,identityId:f}),y()};return()=>y().catch(async w=>{throw u&&Promise.resolve(t.removeItem(u)).catch(()=>{}),w})}function q(e){throw new a("Response from Amazon Cognito contained no identity ID",{logger:e})}const Z=e=>A({...e}),ee=e=>$({...e}),W="169.254.170.2",U="169.254.170.23",z="[fd00:ec2::23]",F=(e,t)=>{if(e.protocol!=="https:"&&!(e.hostname===W||e.hostname===U||e.hostname===z)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;const r=e.hostname.split("."),o=n=>{const s=parseInt(n,10);return 0<=s&&s<=255};if(r[0]==="127"&&o(r[1])&&o(r[2])&&o(r[3])&&r.length===4)return}throw new a(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`,{logger:t})}};function G(e){return new _({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((t,[r,o])=>(t[r]=o,t),{}),fragment:e.hash})}async function V(e,t){const o=await N(e.body).transformToString();if(e.statusCode===200){const n=JSON.parse(o);if(typeof n.AccessKeyId!="string"||typeof n.SecretAccessKey!="string"||typeof n.Token!="string"||typeof n.Expiration!="string")throw new a("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:t});return{accessKeyId:n.AccessKeyId,secretAccessKey:n.SecretAccessKey,sessionToken:n.Token,expiration:O(n.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let n={};try{n=JSON.parse(o)}catch{}throw Object.assign(new a(`Server responded with status: ${e.statusCode}`,{logger:t}),{Code:n.Code,Message:n.Message})}throw new a(`Server responded with status: ${e.statusCode}`,{logger:t})}const J=(e,t,r)=>async()=>{for(let o=0;o<t;++o)try{return await e()}catch{await new Promise(s=>setTimeout(s,r))}return await e()},te=(e={})=>{var s;(s=e.logger)==null||s.debug("@aws-sdk/credential-provider-http - fromHttp");let t;const r=e.credentialsFullUri;if(r)t=r;else throw new a("No HTTP credential provider host provided.",{logger:e.logger});const o=new URL(t);F(o,e.logger);const n=new x;return J(async()=>{const i=G(o);e.authorizationToken&&(i.headers.Authorization=e.authorizationToken);const c=await n.handle(i);return V(c.response)},e.maxRetries??3,e.timeout??1e3)},re=e=>{let t;return async()=>{var i;(i=e.logger)==null||i.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");const r={...e.params,RoleSessionName:e.params.RoleSessionName??"aws-sdk-js-"+Date.now()};if(r!=null&&r.SerialNumber){if(!e.mfaCodeProvider)throw new a("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",{tryNextLink:!1,logger:e.logger});r.TokenCode=await e.mfaCodeProvider(r==null?void 0:r.SerialNumber)}const{AssumeRoleCommand:o,STSClient:n}=await m(()=>import("./loadSts-8af71f3c.js"),["assets/loadSts-8af71f3c.js","assets/AssumeRoleCommand-bd2d7c5d.js","assets/index-6b40c100.js","assets/lazy-json-bd073f8f.js","assets/index-d0092a53.js","assets/index-d8cbc275.css","assets/noAuth-3a9ec9c8.js","assets/constants-c1d53137.js"]);if(t||(t=new n({...e.clientConfig,credentials:e.masterCredentials})),e.clientPlugins)for(const c of e.clientPlugins)t.middlewareStack.use(c);const{Credentials:s}=await t.send(new o(r));if(!s||!s.AccessKeyId||!s.SecretAccessKey)throw new a(`Invalid response from STS.assumeRole call with role ${r.RoleArn}`,{logger:e.logger});return{accessKeyId:s.AccessKeyId,secretAccessKey:s.SecretAccessKey,sessionToken:s.SessionToken,expiration:s.Expiration,credentialScope:s.CredentialScope}}},Y=e=>async()=>{var l;(l=e.logger)==null||l.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");const{roleArn:t,roleSessionName:r,webIdentityToken:o,providerId:n,policyArns:s,policy:i,durationSeconds:c}=e;let{roleAssumerWithWebIdentity:d}=e;if(!d){const{getDefaultRoleAssumerWithWebIdentity:u}=await m(()=>import("./index-c41f7e0c.js"),["assets/index-c41f7e0c.js","assets/AssumeRoleCommand-bd2d7c5d.js","assets/index-6b40c100.js","assets/lazy-json-bd073f8f.js","assets/index-d0092a53.js","assets/index-d8cbc275.css","assets/noAuth-3a9ec9c8.js","assets/constants-c1d53137.js","assets/create-aggregated-client-5440cf77.js"]);d=u({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:e.parentClientConfig},e.clientPlugins)}return d({RoleArn:t,RoleSessionName:r??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:o,ProviderId:n,PolicyArns:s,Policy:i,DurationSeconds:c})},oe=e=>Y({...e});export{Z as fromCognitoIdentity,ee as fromCognitoIdentityPool,te as fromHttp,re as fromTemporaryCredentials,oe as fromWebToken};
